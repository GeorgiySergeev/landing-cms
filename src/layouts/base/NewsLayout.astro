---
// NewsLayout extends BaseLayout with enhancements for news articles
import BaseLayout from './BaseLayout.astro';
import { getLangDirection } from '../../utils/i18n.js';

// Определяем интерфейс для связанных статей
interface RelatedArticle {
  url: string;
  title: string;
  image?: string;
  publishDate?: string;
}

// Get layout props with additional parameters for news articles
const {
  title = 'News Article',
  description,
  lang = 'en',
  dir = getLangDirection(lang),
  themeColor = 'default',
  country = 'us', // Default country
  publishDate,
  modifiedDate,
  author,
  category,
  tags = [],
  image,
  readTime,
  isBreakingNews = false,
  relatedArticles = [],
} = Astro.props;

// Helper function to get country code in lowercase for consistency
const getCountryCode = (countryCode: string) => {
  return countryCode.toLowerCase();
};

// Normalize the country code
const normalizedCountry = getCountryCode(country);

// The path to the flag image
const flagPath = `/images/flags/${normalizedCountry}.svg`;

// Determine theme based on country if needed
function getCountryTheme(country: string | undefined | null) {
  const countryThemes = {
    ae: 'arabic',
    sa: 'arabic',
    eg: 'arabic',
    cn: 'chinese',
    jp: 'japanese',
    de: 'german',
    bd: 'bn-bd-adult',
  };

  const key = country?.toLowerCase() as keyof typeof countryThemes | undefined;
  return (key && countryThemes[key]) || themeColor;
}

const activeTheme = getCountryTheme(normalizedCountry);

// Additional props to pass to the BaseLayout
const baseProps = {
  title,
  description,
  lang,
  dir,
  themeColor: activeTheme,
};

// Format date for display
const formatDate = (dateString: string | null | undefined) => {
  if (!dateString) return '';
  const date = new Date(dateString);
  return new Intl.DateTimeFormat(lang, {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
    hour: '2-digit',
    minute: '2-digit',
  }).format(date);
};

const displayDate = formatDate(publishDate);
const displayModified = modifiedDate ? formatDate(modifiedDate) : '';
---

<BaseLayout {...baseProps}>
  <!-- Meta tags for article -->
  <slot name="head" slot="head">
    {description && <meta name="description" content={description} />}
    {publishDate && <meta property="article:published_time" content={publishDate} />}
    {modifiedDate && <meta property="article:modified_time" content={modifiedDate} />}
    {tags && tags.map((tag: string) => <meta property="article:tag" content={tag} />)}
    {country && <meta property="article:region" content={country} />}
    {image && <meta property="og:image" content={image.src} />}
  </slot>

  <div class="article-container">
    <!-- Reading progress indicator -->
    <div class="reading-progress-container">
      <div class="reading-progress" id="reading-progress"></div>
    </div>

    <article class="news-article">
      <!-- Article header section -->
      <header class="article-header">
        <h1>{title}</h1>

        <div class="article-meta">
          {
            displayDate && (
              <div class="publish-date">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="16"
                  height="16"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round">
                  <rect x="3" y="4" width="18" height="18" rx="2" ry="2" />
                  <line x1="16" y1="2" x2="16" y2="6" />
                  <line x1="8" y1="2" x2="8" y2="6" />
                  <line x1="3" y1="10" x2="21" y2="10" />
                </svg>
                <span>{displayDate}</span>
              </div>
            )
          }

          {
            displayModified && displayModified !== displayDate && (
              <div class="modified-date">
                <small>Updated: {displayModified}</small>
              </div>
            )
          }

          {
            readTime && (
              <div class="read-time">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="16"
                  height="16"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round">
                  <circle cx="12" cy="12" r="10" />
                  <polyline points="12 6 12 12 16 14" />
                </svg>
                <span>{readTime} min read</span>
              </div>
            )
          }
        </div>

        {
          author && (
            <div class="author-info">
              {author.image && (
                <img src={author.image} alt={`Photo of ${author.name}`} class="author-image" />
              )}
              <div class="author-details">
                <div class="author-name">{author.name}</div>
                {author.bio && <div class="author-bio">{author.bio}</div>}
              </div>
            </div>
          )
        }

        {
          image && (
            <figure class="feature-image">
              <img src={image.src} alt={image.alt || title} />
              {image.caption && <figcaption>{image.caption}</figcaption>}
            </figure>
          )
        }
      </header>

      <!-- Main article content -->
      <div class="article-content">
        <!-- <slot /> -->
      </div>

      <!-- Article footer with tags -->
      <footer class="article-footer">
        {
          tags.length > 0 && (
            <div class="tags-container">
              <span class="tags-label">Topics:</span>
              <ul class="tags-list">
                {tags.map((tag: string) => (
                  <li class="tag-item">
                    <a href={`/tags/${tag.toLowerCase().replace(/\s+/g, '-')}`}>{tag}</a>
                  </li>
                ))}
              </ul>
            </div>
          )
        }

        <!-- Social share buttons -->
        <div class="social-share">
          <div class="share-label">Share this story:</div>
          <div class="share-buttons">
            <button
              class="share-button facebook"
              aria-label="Share on Facebook"
              title="Share on Facebook"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="20"
                height="20"
                viewBox="0 0 24 24"
                fill="currentColor"
                ><path
                  d="M9 8h-3v4h3v12h5v-12h3.642l.358-4h-4v-1.667c0-.955.192-1.333 1.115-1.333h2.885v-5h-3.808c-3.596 0-5.192 1.583-5.192 4.615v3.385z"
                ></path></svg
              >
            </button>
            <button
              class="share-button twitter"
              aria-label="Share on Twitter"
              title="Share on Twitter"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="20"
                height="20"
                viewBox="0 0 24 24"
                fill="currentColor"
                ><path
                  d="M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z"
                ></path></svg
              >
            </button>
            <button class="share-button email" aria-label="Share via Email" title="Share via Email">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="20"
                height="20"
                viewBox="0 0 24 24"
                fill="currentColor"
                ><path
                  d="M0 3v18h24v-18h-24zm6.623 7.929l-4.623 5.712v-9.458l4.623 3.746zm-4.141-5.929h19.035l-9.517 7.713-9.518-7.713zm5.694 7.188l3.824 3.099 3.83-3.104 5.612 6.817h-18.779l5.513-6.812zm9.208-1.264l4.616-3.741v9.348l-4.616-5.607z"
                ></path></svg
              >
            </button>
            <button
              class="share-button whatsapp"
              aria-label="Share on WhatsApp"
              title="Share on WhatsApp"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="20"
                height="20"
                viewBox="0 0 24 24"
                fill="currentColor"
                ><path
                  d="M.057 24l1.687-6.163c-1.041-1.804-1.588-3.849-1.587-5.946.003-6.556 5.338-11.891 11.893-11.891 3.181.001 6.167 1.24 8.413 3.488 2.245 2.248 3.481 5.236 3.48 8.414-.003 6.557-5.338 11.892-11.893 11.892-1.99-.001-3.951-.5-5.688-1.448l-6.305 1.654zm6.597-3.807c1.676.995 3.276 1.591 5.392 1.592 5.448 0 9.886-4.434 9.889-9.885.002-5.462-4.415-9.89-9.881-9.892-5.452 0-9.887 4.434-9.889 9.884-.001 2.225.651 3.891 1.746 5.634l-.999 3.648 3.742-.981zm11.387-5.464c-.074-.124-.272-.198-.57-.347-.297-.149-1.758-.868-2.031-.967-.272-.099-.47-.149-.669.149-.198.297-.768.967-.941 1.165-.173.198-.347.223-.644.074-.297-.149-1.255-.462-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.297-.347.446-.521.151-.172.2-.296.3-.495.099-.198.05-.372-.025-.521-.075-.148-.669-1.611-.916-2.206-.242-.579-.487-.501-.669-.51l-.57-.01c-.198 0-.52.074-.792.372s-1.04 1.016-1.04 2.479 1.065 2.876 1.213 3.074c.149.198 2.095 3.2 5.076 4.487.709.306 1.263.489 1.694.626.712.226 1.36.194 1.872.118.571-.085 1.758-.719 2.006-1.413.248-.695.248-1.29.173-1.414z"
                ></path></svg
              >
            </button>
          </div>
        </div>
      </footer>
    </article>

    <!-- Sidebar with related articles if any -->
    {
      relatedArticles.length > 0 && (
        <aside class="related-articles">
          <h2 class="related-title">Related Stories</h2>
          <ul class="related-list">
            {relatedArticles.map((article: RelatedArticle) => (
              <li class="related-item">
                <a href={article.url} class="related-link">
                  {article.image && (
                    <img
                      src={article.image}
                      alt={article.title}
                      class="related-image"
                      loading="lazy"
                    />
                  )}
                  <div class="related-content">
                    <h3 class="related-headline">{article.title}</h3>
                    {article.publishDate && (
                      <div class="related-date">{formatDate(article.publishDate)}</div>
                    )}
                  </div>
                </a>
              </li>
            ))}
          </ul>
        </aside>
      )
    }
  </div>

  <slot name="footer" />

  <style>
    /* Main layout and containers */
    .article-container {
      display: grid;
      grid-template-columns: 1fr;
      max-width: 100%;
      margin: 0 auto;
      padding: 0;
      position: relative;
    }

    /* Reading progress bar */
    .reading-progress-container {
      position: sticky;
      top: 0;
      left: 0;
      width: 100%;
      height: 4px;
      background-color: #f1f1f1;
      z-index: 100;
    }

    .reading-progress {
      height: 100%;
      background-color: var(--color-primary, #0066cc);
      width: 0%;
      transition: width 0.2s ease;
    }

    /* News header */
    .news-header {
      display: flex;
      flex-wrap: wrap;
      align-items: center;
      justify-content: space-between;
      padding: 0.5rem 1rem;
      border-bottom: 1px solid #eaeaea;
    }

    .country-flag-container {
      display: flex;
      align-items: center;
    }

    .country-flag {
      width: 24px;
      height: auto;
      border-radius: 4px;
      box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
    }

    .breaking-news-banner {
      background-color: #e53e3e;
      color: white;
      padding: 0.25rem 0.75rem;
      font-weight: bold;
      text-transform: uppercase;
      font-size: 0.875rem;
      border-radius: 4px;
      margin-left: auto;
      animation: pulse 2s infinite;
    }

    .category-badge {
      padding: 0.25rem 0.75rem;
      background-color: var(--color-primary, #0066cc);
      color: white;
      font-size: 0.75rem;
      font-weight: 600;
      border-radius: 4px;
      text-transform: uppercase;
      margin-left: 1rem;
    }

    /* Article styling */
    .news-article {
      padding: 1rem;
      max-width: 100%;
    }

    .article-header {
      margin-bottom: 2rem;
    }

    .article-header h1 {
      font-size: 1.75rem;
      line-height: 1.2;
      margin-bottom: 1rem;
      font-weight: 700;
    }

    .article-meta {
      display: flex;
      flex-wrap: wrap;
      gap: 1rem;
      font-size: 0.875rem;
      color: #666;
      margin-bottom: 1rem;
      align-items: center;
    }

    .publish-date,
    .read-time {
      display: flex;
      align-items: center;
      gap: 0.25rem;
    }

    .modified-date {
      font-style: italic;
    }

    .author-info {
      display: flex;
      align-items: center;
      gap: 1rem;
      margin-bottom: 1.5rem;
      padding: 1rem 0;
      border-top: 1px solid #eaeaea;
      border-bottom: 1px solid #eaeaea;
    }

    .author-image {
      width: 48px;
      height: 48px;
      border-radius: 50%;
      object-fit: cover;
    }

    .author-name {
      font-weight: 600;
      margin-bottom: 0.25rem;
    }

    .author-bio {
      font-size: 0.875rem;
      color: #666;
      line-height: 1.4;
    }

    .feature-image {
      margin: 0 -1rem 1.5rem;
      width: calc(100% + 2rem);
    }

    .feature-image img {
      width: 100%;
      height: auto;
      display: block;
    }

    .feature-image figcaption {
      font-size: 0.75rem;
      color: #666;
      padding: 0.5rem 1rem;
      background-color: #f9f9f9;
      font-style: italic;
    }

    /* Article content styling */
    .article-content {
      font-size: 1.125rem;
      line-height: 1.7;
      margin-bottom: 2rem;
    }

    /* Article footer */
    .article-footer {
      margin-top: 2rem;
      border-top: 1px solid #eaeaea;
      padding-top: 1.5rem;
    }

    .tags-container {
      margin-bottom: 1.5rem;
    }

    .tags-label {
      font-weight: 600;
      margin-right: 0.5rem;
    }

    .tags-list {
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;
      list-style: none;
      padding: 0;
      margin: 0.5rem 0 0;
    }

    .tag-item a {
      display: inline-block;
      padding: 0.25rem 0.5rem;
      font-size: 0.75rem;
      background-color: #f1f1f1;
      color: #333;
      border-radius: 4px;
      text-decoration: none;
      transition:
        background-color 0.2s,
        color 0.2s;
    }

    .tag-item a:hover {
      background-color: var(--color-primary, #0066cc);
      color: white;
    }

    /* Social share */
    .social-share {
      margin-top: 1.5rem;
    }

    .share-label {
      font-weight: 600;
      margin-bottom: 0.5rem;
    }

    .share-buttons {
      display: flex;
      gap: 0.5rem;
    }

    .share-button {
      width: 36px;
      height: 36px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      border: none;
      cursor: pointer;
      transition: transform 0.2s;
    }

    .share-button:hover {
      transform: translateY(-2px);
    }

    .facebook {
      background-color: #1877f2;
      color: white;
    }

    .twitter {
      background-color: #1da1f2;
      color: white;
    }

    .email {
      background-color: #777;
      color: white;
    }

    .whatsapp {
      background-color: #25d366;
      color: white;
    }

    /* Related articles */
    .related-articles {
      padding: 1rem;
      border-top: 1px solid #eaeaea;
    }

    .related-title {
      font-size: 1.25rem;
      margin-bottom: 1rem;
      font-weight: 600;
    }

    .related-list {
      list-style: none;
      padding: 0;
      margin: 0;
    }

    .related-item {
      margin-bottom: 1rem;
      border-bottom: 1px solid #eaeaea;
      padding-bottom: 1rem;
    }

    .related-item:last-child {
      border-bottom: none;
    }

    .related-link {
      display: flex;
      gap: 1rem;
      text-decoration: none;
      color: inherit;
    }

    .related-image {
      width: 80px;
      height: 60px;
      object-fit: cover;
      flex-shrink: 0;
    }

    .related-headline {
      font-size: 1rem;
      font-weight: 500;
      margin: 0 0 0.25rem;
      line-height: 1.3;
    }

    .related-date {
      font-size: 0.75rem;
      color: #666;
    }

    /* Animation for breaking news */
    @keyframes pulse {
      0% {
        opacity: 1;
      }
      50% {
        opacity: 0.8;
      }
      100% {
        opacity: 1;
      }
    }

    /* Tablet and larger (min-width: 768px) */
    @media (min-width: 768px) {
      .article-container {
        padding: 0 2rem;
      }

      .news-article {
        padding: 2rem;
        max-width: 100%;
      }

      .article-header h1 {
        font-size: 2.25rem;
      }

      .feature-image {
        margin: 0 0 2rem;
        width: 100%;
      }

      .related-articles {
        padding: 2rem;
      }

      .related-list {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 1.5rem;
      }

      .related-item {
        margin-bottom: 0;
        border-bottom: none;
        padding-bottom: 0;
      }

      .related-link {
        flex-direction: column;
      }

      .related-image {
        width: 100%;
        height: 0;
        padding-bottom: 56.25%; /* 16:9 aspect ratio */
        position: relative;
      }

      .related-image img {
        position: absolute;
        width: 100%;
        height: 100%;
        object-fit: cover;
      }
    }

    /* Desktop (min-width: 1024px) */
    @media (min-width: 1024px) {
      .article-container {
        grid-template-columns: 3fr 1fr;
        max-width: 1200px;
        margin: 0 auto;
        gap: 2rem;
      }

      .reading-progress-container {
        grid-column: 1 / -1;
      }

      .news-article {
        padding: 2rem 0;
      }

      .article-header h1 {
        font-size: 2.5rem;
      }

      .related-articles {
        padding: 2rem 0;
        border-top: none;
        border-left: 1px solid #eaeaea;
        padding-left: 2rem;
      }

      .related-list {
        grid-template-columns: 1fr;
      }
    }
  </style>

  <!-- Script for reading progress bar -->
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const progressBar = document.getElementById('reading-progress');
      const article = document.querySelector('.news-article');

      if (progressBar && article) {
        window.addEventListener('scroll', function () {
          // Calculate how far down the page the user has scrolled
          const scrollTop = window.scrollY;
          const scrollHeight = (article as HTMLElement).offsetHeight;
          const clientHeight = window.innerHeight;

          // Calculate the percentage scrolled
          const scrolled = (scrollTop / (scrollHeight - clientHeight)) * 100;

          // Update progress bar width
          progressBar.style.width = (scrolled > 100 ? 100 : scrolled) + '%';
        });
      }

      // Initialize social share buttons
      const shareButtons = document.querySelectorAll('.share-button');
      shareButtons.forEach((button) => {
        button.addEventListener('click', function (event) {
          const url = encodeURIComponent(window.location.href);
          const title = encodeURIComponent(document.title);
          const target = event.currentTarget as HTMLElement;

          if (target.classList.contains('facebook')) {
            window.open(
              `https://www.facebook.com/sharer/sharer.php?u=${url}`,
              'facebook-share',
              'width=580,height=296',
            );
          } else if (target.classList.contains('twitter')) {
            window.open(
              `https://twitter.com/intent/tweet?url=${url}&text=${title}`,
              'twitter-share',
              'width=550,height=235',
            );
          } else if (target.classList.contains('whatsapp')) {
            window.open(`https://api.whatsapp.com/send?text=${title} ${url}`, 'whatsapp-share');
          } else if (target.classList.contains('email')) {
            window.location.href = `mailto:?subject=${title}&body=${url}`;
          }
        });
      });
    });
  </script>
</BaseLayout>
