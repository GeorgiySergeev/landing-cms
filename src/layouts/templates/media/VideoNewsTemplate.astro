---
import BaseLayout from '../../base/BaseLayout.astro';

export interface Props {
  title: string;
  description?: string;
  publishDate?: string;
  videoSrc: string;
  videoType?: string;
  videoPoster?: string;
  videoCaption?: string;
  videoCredits?: string;
  breakingNews?: boolean;
  liveEvent?: boolean;
  networkBranding?: {
    name: string;
    logo: string;
  };
  author?: {
    name: string;
    image?: string;
    title?: string;
  };
  category?: string;
  tags?: string[];
  relatedVideos?: Array<{
    title: string;
    thumbnail: string;
    url: string;
    duration: string;
  }>;
  lang?: string;
  dir?: string;
  themeColor?: string;
}

const {
  title,
  description,
  publishDate,
  videoSrc,
  videoType = 'video/mp4',
  videoPoster,
  videoCaption,
  videoCredits,
  breakingNews = false,
  liveEvent = false,
  networkBranding,
  author,
  category,
  tags = [],
  relatedVideos = [],
  lang = 'en',
  dir = 'ltr',
  themeColor = 'default',
} = Astro.props;
---

<BaseLayout title={title} lang={lang} dir={dir} themeColor={themeColor}>
  <slot name="head" slot="head">
    <meta name="description" content={description} />
    {
      publishDate && (
        <meta property="video:release_date" content={publishDate} />
      )
    }
    {tags && tags.map(tag => <meta property="video:tag" content={tag} />)}
  </slot>

  <header
    slot="header"
    class={`video-header ${breakingNews ? 'breaking' : ''} ${liveEvent ? 'live' : ''}`}
  >
    {
      networkBranding && (
        <div class="network-branding">
          <img src={networkBranding.logo} alt={networkBranding.name} />
        </div>
      )
    }

    <div class="video-meta">
      {category && <span class="category">{category}</span>}
      {breakingNews && <span class="breaking-badge">BREAKING</span>}
      {liveEvent && <span class="live-badge">LIVE</span>}
    </div>

    <h1>{title}</h1>

    {
      author && (
        <div class="reporter">
          {author.image && (
            <img src={author.image} alt={author.name} class="reporter-img" />
          )}
          <div class="reporter-info">
            <span class="reporter-name">{author.name}</span>
            {author.title && <span class="reporter-title">{author.title}</span>}
          </div>
        </div>
      )
    }

    {
      publishDate && (
        <time datetime={publishDate}>
          {new Date(publishDate).toLocaleDateString(lang, {
            weekday: 'long',
            year: 'numeric',
            month: 'long',
            day: 'numeric',
            hour: '2-digit',
            minute: '2-digit',
          })}
        </time>
      )
    }
  </header>

  <div class="video-container">
    <video
      controls
      poster={videoPoster}
      class={liveEvent ? 'live-video' : ''}
      preload="metadata"
    >
      <source src={videoSrc} type={videoType} />
      Your browser does not support the video tag.
    </video>

    {videoCaption && <p class="video-caption">{videoCaption}</p>}
    {videoCredits && <p class="video-credits">Source: {videoCredits}</p>}
  </div>

  <article class="video-article">
    <div class="article-content">
      <slot />
    </div>

    <aside class="video-sidebar">
      {
        relatedVideos.length > 0 && (
          <div class="related-videos">
            <h3>Related Videos</h3>
            <ul class="video-list">
              {relatedVideos.map(video => (
                <li class="video-item">
                  <a href={video.url} class="video-link">
                    <div class="video-thumbnail">
                      <img src={video.thumbnail} alt={video.title} />
                      <span class="video-duration">{video.duration}</span>
                    </div>
                    <h4 class="video-title">{video.title}</h4>
                  </a>
                </li>
              ))}
            </ul>
          </div>
        )
      }

      <slot name="sidebar" />
    </aside>
  </article>

  <slot name="footer" slot="footer" />
  <slot name="scripts" slot="scripts" />
</BaseLayout>

<style>
  /* Mobile-first approach */
  .video-header {
    padding: 1rem;
    border-bottom: 1px solid var(--color-border, #dee2e6);
  }

  .video-header.breaking {
    background-color: var(--color-breaking-news, #dc3545);
    color: white;
  }

  .video-header.live {
    background-color: var(--color-live, #198754);
    color: white;
  }

  .network-branding {
    margin-bottom: 1rem;
  }

  .network-branding img {
    max-height: 40px;
    width: auto;
  }

  .video-meta {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-bottom: 0.5rem;
  }

  .category {
    text-transform: uppercase;
    font-weight: 600;
    font-size: 0.875rem;
    color: var(--color-category, #6c757d);
  }

  .breaking-badge,
  .live-badge {
    display: inline-block;
    padding: 0.25rem 0.5rem;
    font-size: 0.75rem;
    font-weight: 700;
    text-transform: uppercase;
    border-radius: 0.25rem;
  }

  .breaking-badge {
    background-color: var(--color-breaking-news, #dc3545);
    color: white;
  }

  .live-badge {
    background-color: var(--color-live, #198754);
    color: white;
    position: relative;
    padding-left: 1.5rem;
  }

  .live-badge::before {
    content: '';
    position: absolute;
    left: 0.5rem;
    top: 50%;
    transform: translateY(-50%);
    width: 0.5rem;
    height: 0.5rem;
    background-color: white;
    border-radius: 50%;
    animation: pulse 2s infinite;
  }

  .video-header h1 {
    font-size: 1.5rem;
    line-height: 1.2;
    margin: 0.5rem 0;
  }

  .reporter {
    display: flex;
    align-items: center;
    margin: 1rem 0;
    gap: 0.75rem;
  }

  .reporter-img {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    object-fit: cover;
  }

  .reporter-info {
    display: flex;
    flex-direction: column;
  }

  .reporter-name {
    font-weight: 600;
  }

  .reporter-title {
    font-size: 0.875rem;
    color: var(--color-text-secondary, #6c757d);
  }

  .video-container {
    width: 100%;
    margin: 0 auto;
    position: relative;
  }

  .video-container video {
    width: 100%;
    display: block;
  }

  .live-video::after {
    content: 'LIVE';
    position: absolute;
    top: 1rem;
    right: 1rem;
    background-color: var(--color-live, #198754);
    color: white;
    padding: 0.25rem 0.5rem;
    font-size: 0.75rem;
    font-weight: 700;
    border-radius: 0.25rem;
  }

  .video-caption {
    font-size: 0.875rem;
    line-height: 1.5;
    margin: 0.5rem 0;
  }

  .video-credits {
    font-size: 0.75rem;
    color: var(--color-text-secondary, #6c757d);
    margin: 0.25rem 0 1rem;
  }

  .video-article {
    display: grid;
    grid-template-columns: 1fr;
    gap: 2rem;
    padding: 1rem;
  }

  .article-content {
    width: 100%;
    font-size: 1.125rem;
    line-height: 1.8;
  }

  .video-sidebar {
    width: 100%;
  }

  .related-videos h3 {
    font-size: 1.25rem;
    margin-bottom: 1rem;
    padding-bottom: 0.5rem;
    border-bottom: 1px solid var(--color-border, #dee2e6);
  }

  .video-list {
    list-style: none;
    padding: 0;
    margin: 0;
    display: grid;
    grid-template-columns: 1fr;
    gap: 1rem;
  }

  .video-item {
    width: 100%;
  }

  .video-link {
    display: flex;
    flex-direction: column;
    text-decoration: none;
    color: inherit;
  }

  .video-thumbnail {
    position: relative;
    margin-bottom: 0.5rem;
  }

  .video-thumbnail img {
    width: 100%;
    aspect-ratio: 16 / 9;
    object-fit: cover;
    border-radius: 0.25rem;
  }

  .video-duration {
    position: absolute;
    bottom: 0.5rem;
    right: 0.5rem;
    background-color: rgba(0, 0, 0, 0.7);
    color: white;
    padding: 0.125rem 0.25rem;
    font-size: 0.75rem;
    border-radius: 0.25rem;
  }

  .video-title {
    font-size: 0.875rem;
    line-height: 1.4;
    margin: 0;
  }

  @keyframes pulse {
    0% {
      opacity: 1;
    }
    50% {
      opacity: 0.2;
    }
    100% {
      opacity: 1;
    }
  }

  /* Tablet */
  @media (min-width: 768px) {
    .video-header {
      padding: 1.5rem;
    }

    .video-header h1 {
      font-size: 2rem;
    }

    .network-branding img {
      max-height: 50px;
    }

    .video-article {
      padding: 1.5rem;
    }

    .video-list {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  /* Desktop */
  @media (min-width: 1024px) {
    .video-header {
      padding: 2rem;
    }

    .video-header h1 {
      font-size: 2.5rem;
    }

    .network-branding img {
      max-height: 60px;
    }

    .video-container {
      max-width: 80%;
    }

    .video-article {
      grid-template-columns: 2fr 1fr;
      padding: 2rem;
      max-width: 1200px;
      margin: 0 auto;
    }

    .video-list {
      grid-template-columns: 1fr;
    }
  }
</style>
